name: Go

on:
  push:
    branches: [ master ]

jobs:
  build-w:
    name: Build for Windows
    runs-on: windows-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build
      run: go build -v .
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: encoder-windows.exe
        path: encoder.exe
  build-l:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build
      run: go build -v .
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: encoder-linux
        path: encoder
  build-x:
    name: Build for OSX
    runs-on: macOS-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Build
      run: go build -v .
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: encoder-osx
        path: encoder  
    
    
  release:
    name: Release artifacts.
    if: ${{ success() }}
    needs: [ build-l, build-x, build-w ]
    runs-on: ubuntu-latest
    steps:
    - name: Generate build number
      uses: einaregilsson/build-number@v2 
      with:
        token: ${{secrets.github_token}}  
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.sha }}-release
        release_name: Release ${{ steps.buildnumber.outputs.build_number }}
        draft: false
        prerelease: false
    - name: Download Artifact for Windows (1/3)
      uses: actions/download-artifact@v1
      with:
        name: encoder-windows.exe
        path: encoder-w
    - name: Download Artifact for Linux (2/3)
      uses: actions/download-artifact@v1
      with:
        name: encoder-linux
        path: encoder-l
    - name: Download Artifact for OSX (3/3)
      uses: actions/download-artifact@v1
      with:
        name: encoder-osx   
        path: encoder-o
    - name: Debug Information
      run: |
        dir
        mv encoder-w/encoder.exe ./encoder-windows.exe
        mv encoder-l/encoder ./encoder-linux
        mv encoder-o/encoder ./encoder-osx
        
    - name: Upload Release Asset for Windows
      id: upload-release-asset-w
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./encoder-windows.exe
        asset_name: encoder-windows.exe
        asset_content_type: application/octet-stream
    - name: Upload Release Asset for Linux
      id: upload-release-asset-l
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./encoder-linux
        asset_name: encoder-linux 
        asset_content_type: application/octet-stream
    - name: Upload Release Asset for OSX
      id: upload-release-asset-x
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./encoder-osx
        asset_name: encoder-osx
        asset_content_type: application/octet-stream
  
